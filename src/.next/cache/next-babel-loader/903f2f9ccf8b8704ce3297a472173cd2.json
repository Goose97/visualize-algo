{"ast":null,"code":"import _getIterator from \"@babel/runtime-corejs2/core-js/get-iterator\";\nimport _Array$isArray from \"@babel/runtime-corejs2/core-js/array/is-array\";\nimport _Symbol$iterator from \"@babel/runtime-corejs2/core-js/symbol/iterator\";\nimport _Symbol from \"@babel/runtime-corejs2/core-js/symbol\";\nimport _Array$from from \"@babel/runtime-corejs2/core-js/array/from\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _debounce from \"lodash/debounce\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof _Symbol === \"undefined\" || o[_Symbol$iterator] == null) { if (_Array$isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = _getIterator(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return _Array$from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar CanvasObserver = /*#__PURE__*/function () {\n  function CanvasObserver() {\n    var _this = this;\n\n    _classCallCheck(this, CanvasObserver);\n\n    _defineProperty(this, \"regisiteredCallback\", void 0);\n\n    _defineProperty(this, \"triggerRegisteredCallbacks\", _debounce(function () {\n      _this.regisiteredCallback.forEach(function (callback) {\n        return callback();\n      });\n    }, 300));\n\n    this.regisiteredCallback = [];\n  }\n\n  _createClass(CanvasObserver, [{\n    key: \"register\",\n    value: function register(callback) {\n      this.regisiteredCallback.push(callback);\n    }\n  }, {\n    key: \"initiate\",\n    value: function initiate() {\n      var _this2 = this;\n\n      if (typeof document === 'undefined') return;\n      var canvasNode = document.querySelector('.canvas-container > svg');\n      if (!canvasNode) return;\n      var config = {\n        attributes: true,\n        childList: true,\n        subtree: true\n      };\n\n      var callback = function callback(mutationsList) {\n        var _iterator = _createForOfIteratorHelper(mutationsList),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var mutation = _step.value;\n\n            if (mutation.type === 'attributes' && mutation.attributeName === 'viewBox') {\n              _this2.triggerRegisteredCallbacks();\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      };\n\n      var observer = new MutationObserver(callback);\n      observer.observe(canvasNode, config);\n    }\n  }]);\n\n  return CanvasObserver;\n}();\n\nvar singletonCanvasObserver = new CanvasObserver();\nexport default singletonCanvasObserver;","map":null,"metadata":{},"sourceType":"module"}