{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { CanvasContainer, ArrayDS, InitArrayInput } from 'components';\nimport withDSPage from 'hocs/withDSPage';\nimport { extractInstructionFromDescription } from 'utils';\nimport { arrayInstruction } from 'instructions/Array';\nimport { code, explanation } from 'codes/Array';\nexport class ArrayPage extends Component {\n  render() {\n    const {\n      sideBarWidth,\n      autoPlay,\n      currentStep,\n      stepDescription,\n      data,\n      onDataChange,\n      currentApi,\n      executedApiCount,\n      onExecuteApi\n    } = this.props;\n    const arrayInstruction = extractInstructionFromDescription(stepDescription, 'array');\n    return data ? __jsx(CanvasContainer, null, __jsx(ArrayDS, {\n      x: 100,\n      y: 200,\n      blockType: \"block\",\n      initialData: data,\n      currentStep: currentStep,\n      instructions: arrayInstruction,\n      totalStep: stepDescription.length - 1,\n      handleExecuteApi: onExecuteApi,\n      interactive: true,\n      executedApiCount: executedApiCount,\n      currentApi: currentApi,\n      dropdownDisabled: autoPlay\n    })) : __jsx(\"div\", {\n      className: \"h-full fx-center linked-list-page__init-button\",\n      style: {\n        transform: `translateX(-${(sideBarWidth || 0) / 2}px)`\n      }\n    }, __jsx(InitArrayInput, {\n      onSubmit: onDataChange,\n      text: \"Create new array\"\n    }));\n  }\n\n}\nexport default withDSPage({\n  code,\n  explanation,\n  instructionGenerator: arrayInstruction\n})(ArrayPage);","map":null,"metadata":{},"sourceType":"module"}