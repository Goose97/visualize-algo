{"ast":null,"code":"import _Menu from \"antd/lib/menu\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { CustomDropDown, ParameterInputPopover } from 'components';\nimport { classNameHelper } from 'utils';\nexport class DropdownWithParamsInput extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isMenuVisible: false\n    };\n  }\n\n  handleSelectApi(api, params) {\n    const {\n      handler\n    } = this.props;\n    const paramsAfterTypeConversion = params && this.convertTypeForParameters(params, api);\n    handler && handler(api, paramsAfterTypeConversion);\n    this.setState({\n      isMenuVisible: false\n    });\n  }\n\n  convertTypeForParameters(params, apiName) {\n    const paramsType = this.getApiRequiredParams(apiName);\n    let newParams = {};\n    Object.entries(params).forEach(([name, value]) => {\n      const requiredType = paramsType[name];\n      let valueAfterTypeConversion;\n\n      switch (requiredType) {\n        case 'number':\n          valueAfterTypeConversion = parseInt(value);\n          break;\n\n        case 'string':\n          valueAfterTypeConversion = value.toString();\n          break;\n\n        default:\n          valueAfterTypeConversion = value;\n      }\n\n      newParams[name] = valueAfterTypeConversion;\n    });\n    return newParams;\n  }\n\n  renderMenu() {\n    const {\n      options\n    } = this.props;\n    return __jsx(_Menu, null, options.map(({\n      label,\n      value: apiName\n    }) => {\n      const requiredParams = this.getApiRequiredParams(apiName);\n\n      const paramsInputPopover = __jsx(ParameterInputPopover, {\n        getPopupContainer: triggerNode => triggerNode.parentNode,\n        parameters: requiredParams,\n        onSubmit: params => {\n          this.handleSelectApi(apiName, params);\n          this.setState({\n            isMenuVisible: false\n          });\n        }\n      }, __jsx(\"div\", null, label));\n\n      return requiredParams ? __jsx(_Menu.Item, {\n        key: apiName\n      }, paramsInputPopover) : __jsx(_Menu.Item, {\n        key: apiName,\n        onClick: () => this.handleSelectApi(apiName)\n      }, label);\n    }));\n  }\n\n  getApiRequiredParams(apiName) {\n    const {\n      requiredApiParams\n    } = this.props;\n    return requiredApiParams && requiredApiParams[apiName];\n  }\n\n  produceClassName() {\n    const {\n      isMenuVisible\n    } = this.state;\n    return classNameHelper({\n      base: 'dropdown-with-params-input__wrapper',\n      ['menu-visible']: !!isMenuVisible\n    });\n  }\n\n  render() {\n    const {\n      options,\n      disabled\n    } = this.props;\n    const {\n      isMenuVisible\n    } = this.state;\n    return __jsx(CustomDropDown, {\n      overlay: this.renderMenu(),\n      options: options,\n      onVisibleChange: visible => this.setState({\n        isMenuVisible: visible\n      }),\n      visible: isMenuVisible,\n      disabled: disabled\n    });\n  }\n\n}\nexport default DropdownWithParamsInput;","map":null,"metadata":{},"sourceType":"module"}