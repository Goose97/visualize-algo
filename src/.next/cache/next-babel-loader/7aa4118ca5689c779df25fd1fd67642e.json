{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { classNameHelper } from 'utils';\nexport class Button extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"handleClick\", e => {\n      const {\n        onClick,\n        disabled\n      } = this.props;\n      onClick && !disabled && onClick(e);\n    });\n  }\n\n  produceClassName() {\n    const {\n      type,\n      disabled,\n      className\n    } = this.props;\n    let classNameObject = {\n      base: 'visual-algo-button__wrapper',\n      [type]: !!type,\n      disabled: !!disabled\n    };\n    if (className) classNameObject[className] = true;\n    return classNameHelper(classNameObject);\n  }\n\n  render() {\n    const {\n      children,\n      style\n    } = this.props;\n    return __jsx(\"button\", {\n      style: style,\n      className: this.produceClassName(),\n      onClick: this.handleClick\n    }, children);\n  }\n\n}\nexport default Button;","map":null,"metadata":{},"sourceType":"module"}