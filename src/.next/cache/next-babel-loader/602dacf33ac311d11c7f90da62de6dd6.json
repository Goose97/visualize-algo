{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst DEFAULT_DURATION = 1500;\nexport class Instructions {\n  //@ts-ignore\n  constructor() {\n    _defineProperty(this, \"instructions\", void 0);\n\n    _defineProperty(this, \"duration\", void 0);\n\n    _defineProperty(this, \"buffer\", void 0);\n\n    this.instructions = [];\n    this.duration = DEFAULT_DURATION;\n    this.initNewBuffer();\n  }\n\n  initNewBuffer() {\n    // hold instruction which are not commited to instruction list\n    this.buffer = {\n      actions: {},\n      duration: this.duration\n    };\n  }\n\n  pushActionsAndEndStep(assign, actions) {\n    this.pushActions(assign, actions);\n    this.endStep();\n  }\n\n  pushActions(assign, actions) {\n    const oldActionOfThisAssignee = this.buffer.actions[assign];\n\n    if (oldActionOfThisAssignee) {\n      oldActionOfThisAssignee.push(...actions);\n    } else {\n      this.buffer.actions[assign] = [...actions];\n    }\n  }\n\n  endStep() {\n    this.instructions.push(this.buffer);\n    this.initNewBuffer();\n  }\n\n  setCodeLine(codeLine) {\n    this.buffer.codeLine = codeLine;\n  }\n\n  get() {\n    return this.instructions;\n  }\n\n  setDuration(duration) {\n    this.duration = duration;\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}