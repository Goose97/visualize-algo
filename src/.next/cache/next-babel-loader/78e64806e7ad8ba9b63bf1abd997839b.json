{"ast":null,"code":"import _Reflect$construct from \"@babel/runtime-corejs2/core-js/reflect/construct\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _uniqBy from \"lodash/uniqBy\";\nimport _isFunction from \"lodash/isFunction\";\nimport _pick from \"lodash/pick\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = _Reflect$construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false; if (_Reflect$construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(_Reflect$construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { GraphMemoryBlock, GraphLikeEdges } from 'components';\nimport { GraphHTML } from 'components/Graph/GraphHTML';\nimport withDSCore from 'hocs/withDSCore';\nimport transformGraphModel from 'transformers/Graph';\nexport var GraphDS = /*#__PURE__*/function (_Component) {\n  _inherits(GraphDS, _Component);\n\n  var _super = _createSuper(GraphDS);\n\n  function GraphDS(props) {\n    var _this;\n\n    _classCallCheck(this, GraphDS);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"wrapperRef\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"injectHTMLIntoCanvas\", function () {\n      var model = _this.props.model;\n      var _this$props = _this.props,\n          handleExecuteApi = _this$props.handleExecuteApi,\n          dropdownDisabled = _this$props.dropdownDisabled;\n      setTimeout(function () {\n        GraphHTML.renderToView({\n          model: model,\n          wrapperElement: _this.wrapperRef.current,\n          coordinate: _pick(_this.props, ['x', 'y']),\n          apiHandler: function apiHandler(apiName, params) {\n            if (!_isFunction(handleExecuteApi)) return;\n            handleExecuteApi(apiName, params);\n          },\n          disabled: dropdownDisabled\n        });\n      }, 0);\n    });\n\n    _this.wrapperRef = React.createRef(); // Register HTML injector\n\n    props.registerHTMLInjector(_this.injectHTMLIntoCanvas);\n    return _this;\n  }\n\n  _createClass(GraphDS, [{\n    key: \"getGraphModel\",\n    value: function getGraphModel() {\n      var _this$props2 = this.props,\n          data = _this$props2.data,\n          controlled = _this$props2.controlled,\n          model = _this$props2.model;\n      return controlled ? data : model;\n    }\n  }, {\n    key: \"renderVertices\",\n    value: function renderVertices() {\n      return this.getGraphModel().map(function (node) {\n        return __jsx(GraphMemoryBlock, node);\n      });\n    }\n  }, {\n    key: \"renderEdges\",\n    value: function renderEdges() {\n      var _this2 = this;\n\n      var allEdgesToRender = this.getAllEdgesToRender();\n      return allEdgesToRender.map(function (_ref) {\n        var vertexPair = _ref.key,\n            highlight = _ref.highlight;\n\n        var _vertexPair$split$map = vertexPair.split('-').map(function (key) {\n          return _this2.findNodeByKey(_this2.getGraphModel(), +key);\n        }),\n            _vertexPair$split$map2 = _slicedToArray(_vertexPair$split$map, 2),\n            from = _vertexPair$split$map2[0],\n            to = _vertexPair$split$map2[1];\n\n        if (from && to) {\n          return __jsx(GraphLikeEdges, {\n            from: _pick(from, ['x', 'y']),\n            to: _pick(to, ['x', 'y']),\n            key: vertexPair,\n            highlight: highlight,\n            visible: true\n          });\n        } else {\n          return null;\n        }\n      });\n    }\n  }, {\n    key: \"getAllEdgesToRender\",\n    value: function getAllEdgesToRender() {\n      var allEdgesToRender = [];\n      this.getGraphModel().forEach(function (_ref2) {\n        var key = _ref2.key,\n            adjacentNodes = _ref2.adjacentNodes,\n            highlightEdges = _ref2.highlightEdges;\n        adjacentNodes.forEach(function (adjacentKey) {\n          var edgeKey = [key, adjacentKey].sort().join('-');\n          var isEdgeNeedFocus = !!(highlightEdges === null || highlightEdges === void 0 ? void 0 : highlightEdges.includes(adjacentKey));\n          allEdgesToRender.push({\n            key: edgeKey,\n            highlight: isEdgeNeedFocus\n          });\n        });\n      });\n      return _uniqBy(_toConsumableArray(allEdgesToRender.values()), function (_ref3) {\n        var key = _ref3.key;\n        return key;\n      });\n    }\n  }, {\n    key: \"findNodeByKey\",\n    value: function findNodeByKey(model, nodeKey) {\n      return model.find(function (_ref4) {\n        var key = _ref4.key;\n        return key === nodeKey;\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(React.Fragment, null, __jsx(\"use\", _extends({\n        href: \"#graph\"\n      }, _pick(this.props, ['x', 'y']), {\n        ref: this.wrapperRef\n      })), __jsx(\"defs\", null, __jsx(\"g\", {\n        id: \"graph\"\n      }, this.renderEdges(), this.renderVertices())));\n    }\n  }], [{\n    key: \"initGraphModel\",\n    value: function initGraphModel(props) {\n      return props.initialData || [];\n    }\n  }]);\n\n  return GraphDS;\n}(Component);\nexport default withDSCore({\n  initModel: GraphDS.initGraphModel,\n  dataTransformer: transformGraphModel //@ts-ignore\n\n})(GraphDS);","map":null,"metadata":{},"sourceType":"module"}