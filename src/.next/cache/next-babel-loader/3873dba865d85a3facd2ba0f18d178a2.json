{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { AutoTransformGroup, Line } from 'components';\nimport { ARRAY_BLOCK_HEIGHT, LINE_HEIGHT } from \"../../constants\";\nexport class SortSeperationLine extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"getRenderSequence\", () => {\n      const {\n        currentApi\n      } = this.props;\n\n      switch (currentApi) {\n        case 'bubbleSort':\n          return ['unsorted', 'line', 'sorted'];\n\n        case 'insertionSort':\n          return ['sorted', 'line', 'unsorted'];\n\n        case 'selectionSort':\n          return ['sorted', 'line', 'unsorted'];\n      }\n    });\n\n    _defineProperty(this, \"getXCoordinationBySequenceIndex\", (index, text) => {\n      const {\n        initialX\n      } = this.props;\n\n      switch (index) {\n        case 0:\n          {\n            const offset = text.length * 10;\n            return initialX - offset;\n          }\n\n        case 1:\n          return initialX;\n\n        case 2:\n          return initialX + 10;\n      }\n    });\n  }\n\n  render() {\n    const {\n      currentX,\n      initialX\n    } = this.props;\n    if (initialX == null) return null;\n    const y1 = ARRAY_BLOCK_HEIGHT + LINE_HEIGHT;\n    const y2 = -LINE_HEIGHT;\n    return __jsx(AutoTransformGroup, {\n      origin: {\n        x: currentX,\n        y: 0\n      }\n    }, this.getRenderSequence().map((item, index) => {\n      const x = this.getXCoordinationBySequenceIndex(index, item);\n      if (item === 'sorted') return __jsx(\"text\", {\n        x: x,\n        y: y2,\n        key: item\n      }, \"Sorted\");\n      if (item === 'unsorted') return __jsx(\"text\", {\n        x: x,\n        y: y2,\n        key: item\n      }, \"Unsorted\");\n      if (item === 'line') return __jsx(Line, {\n        x1: x,\n        x2: x,\n        y1: y1,\n        y2: y2,\n        key: item\n      });\n    }));\n  }\n\n}\nexport default SortSeperationLine;","map":null,"metadata":{},"sourceType":"module"}