{"ast":null,"code":"import ReactDOM from 'react-dom';\nexport default class HTMLRenderer {\n  static inject(component, coordinate, key) {\n    const htmlOverlay = document.getElementById('html-overlay');\n    if (!htmlOverlay) throw new Error(\"A div with id='html-overlay' must exist\");\n    let wrapperDiv = HTMLRenderer.createOrUpdateWrapperDiv(htmlOverlay, coordinate, key);\n    ReactDOM.render(component, wrapperDiv);\n  } // Check if the id already exist, if not we should create a new wrapper\n  // Also check if we need to change the coordinate\n\n\n  static createOrUpdateWrapperDiv(htmlOverlay, coordinate, key) {\n    const {\n      x,\n      y\n    } = coordinate;\n    let wrapperDiv = document.getElementById(key);\n\n    if (wrapperDiv) {\n      // Update if necessary\n      let currentLeft = parseInt(wrapperDiv.style.left);\n      let currentRight = parseInt(wrapperDiv.style.right);\n      if (currentLeft !== x) wrapperDiv.style.left = `${x}px`;\n      if (currentRight !== y) wrapperDiv.style.top = `${y}px`;\n    } else {\n      // Create new one\n      wrapperDiv = document.createElement('div');\n      wrapperDiv.id = key;\n      wrapperDiv.style.position = 'absolute';\n      wrapperDiv.style.left = `${x}px`;\n      wrapperDiv.style.top = `${y}px`;\n    }\n\n    htmlOverlay.appendChild(wrapperDiv);\n    return wrapperDiv;\n  }\n\n  static getHTMLOverlayPosition() {\n    const htmlOverlay = document.getElementById('html-overlay');\n    if (htmlOverlay) return htmlOverlay.getBoundingClientRect();else return null;\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}