{"ast":null,"code":"import _Reflect$construct from \"@babel/runtime-corejs2/core-js/reflect/construct\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = _Reflect$construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false; if (_Reflect$construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(_Reflect$construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Prism from 'prismjs';\nimport LineHighlight from \"./LineHightlight\";\nimport \"./prism.css\";\nexport var CodeBlock = /*#__PURE__*/function (_Component) {\n  _inherits(CodeBlock, _Component);\n\n  var _super = _createSuper(CodeBlock);\n\n  function CodeBlock(props) {\n    var _this;\n\n    _classCallCheck(this, CodeBlock);\n\n    _this = _super.call(this, props);\n    _this.codeBlockRef = React.createRef();\n    LineHighlight.init();\n    return _this;\n  }\n\n  _createClass(CodeBlock, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props = this.props,\n          highlightLine = _this$props.highlightLine,\n          code = _this$props.code;\n\n      if (prevProps.highlightLine !== highlightLine) {\n        LineHighlight.reset();\n      }\n\n      if (prevProps.code !== code) {\n        Prism.highlightAll();\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      Prism.highlightAll();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          code = _this$props2.code,\n          highlightLine = _this$props2.highlightLine;\n      return __jsx(\"pre\", {\n        ref: this.codeBlockRef,\n        \"data-line\": highlightLine\n      }, __jsx(\"code\", {\n        className: \"language-javascript visual-algo-code\"\n      }, code));\n    }\n  }]);\n\n  return CodeBlock;\n}(Component);\nexport default CodeBlock;","map":null,"metadata":{},"sourceType":"module"}