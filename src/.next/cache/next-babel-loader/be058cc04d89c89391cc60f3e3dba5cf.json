{"ast":null,"code":"import _Reflect$construct from \"@babel/runtime-corejs2/core-js/reflect/construct\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _Menu from \"antd/lib/menu\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _Object$entries from \"@babel/runtime-corejs2/core-js/object/entries\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = _Reflect$construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false; if (_Reflect$construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(_Reflect$construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { CustomDropDown, ParameterInputPopover } from 'components';\nimport { classNameHelper } from 'utils';\nexport var DropdownWithParamsInput = /*#__PURE__*/function (_Component) {\n  _inherits(DropdownWithParamsInput, _Component);\n\n  var _super = _createSuper(DropdownWithParamsInput);\n\n  function DropdownWithParamsInput(props) {\n    var _this;\n\n    _classCallCheck(this, DropdownWithParamsInput);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      isMenuVisible: false\n    };\n    return _this;\n  }\n\n  _createClass(DropdownWithParamsInput, [{\n    key: \"handleSelectApi\",\n    value: function handleSelectApi(api, params) {\n      var handler = this.props.handler;\n      var paramsAfterTypeConversion = params && this.convertTypeForParameters(params, api);\n      handler && handler(api, paramsAfterTypeConversion);\n      this.setState({\n        isMenuVisible: false\n      });\n    }\n  }, {\n    key: \"convertTypeForParameters\",\n    value: function convertTypeForParameters(params, apiName) {\n      var paramsType = this.getApiRequiredParams(apiName);\n      var newParams = {};\n\n      _Object$entries(params).forEach(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            name = _ref2[0],\n            value = _ref2[1];\n\n        var requiredType = paramsType[name];\n        var valueAfterTypeConversion;\n\n        switch (requiredType) {\n          case 'number':\n            valueAfterTypeConversion = _parseInt(value);\n            break;\n\n          case 'string':\n            valueAfterTypeConversion = value.toString();\n            break;\n\n          default:\n            valueAfterTypeConversion = value;\n        }\n\n        newParams[name] = valueAfterTypeConversion;\n      });\n\n      return newParams;\n    }\n  }, {\n    key: \"renderMenu\",\n    value: function renderMenu() {\n      var _this2 = this;\n\n      var options = this.props.options;\n      return __jsx(_Menu, null, options.map(function (_ref3) {\n        var label = _ref3.label,\n            apiName = _ref3.value;\n\n        var requiredParams = _this2.getApiRequiredParams(apiName);\n\n        var paramsInputPopover = __jsx(ParameterInputPopover, {\n          getPopupContainer: function getPopupContainer(triggerNode) {\n            return triggerNode.parentNode;\n          },\n          parameters: requiredParams,\n          onSubmit: function onSubmit(params) {\n            _this2.handleSelectApi(apiName, params);\n\n            _this2.setState({\n              isMenuVisible: false\n            });\n          }\n        }, __jsx(\"div\", null, label));\n\n        return requiredParams ? __jsx(_Menu.Item, {\n          key: apiName\n        }, paramsInputPopover) : __jsx(_Menu.Item, {\n          key: apiName,\n          onClick: function onClick() {\n            return _this2.handleSelectApi(apiName);\n          }\n        }, label);\n      }));\n    }\n  }, {\n    key: \"getApiRequiredParams\",\n    value: function getApiRequiredParams(apiName) {\n      var requiredApiParams = this.props.requiredApiParams;\n      return requiredApiParams && requiredApiParams[apiName];\n    }\n  }, {\n    key: \"produceClassName\",\n    value: function produceClassName() {\n      var isMenuVisible = this.state.isMenuVisible;\n      return classNameHelper(_defineProperty({\n        base: 'dropdown-with-params-input__wrapper'\n      }, 'menu-visible', !!isMenuVisible));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props = this.props,\n          options = _this$props.options,\n          disabled = _this$props.disabled;\n      var isMenuVisible = this.state.isMenuVisible;\n      return __jsx(CustomDropDown, {\n        overlay: this.renderMenu(),\n        options: options,\n        onVisibleChange: function onVisibleChange(visible) {\n          return _this3.setState({\n            isMenuVisible: visible\n          });\n        },\n        visible: isMenuVisible,\n        disabled: disabled\n      });\n    }\n  }]);\n\n  return DropdownWithParamsInput;\n}(Component);\nexport default DropdownWithParamsInput;","map":null,"metadata":{},"sourceType":"module"}