{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport produce from 'immer';\n\n// Nhận vào trạng thái hiện tại của data structure\n// và operation tương ứng. Trả về trạng thái mới\nvar transformQueueModel = function transformQueueModel(currentModel, operation, payload) {\n  switch (operation) {\n    case 'dequeue':\n      {\n        // Find the first element from the back which still visible\n        // And shift everything to right by decreasing offset by one\n        return produce(currentModel, function (draft) {\n          var found = false;\n\n          for (var i = draft.length - 1; i >= 0; i--) {\n            if (draft[i].visible && !found) {\n              draft[i].visible = false; // draft[i].offsetFromFront = draft[i].offsetFromFront - 1;\n\n              found = true;\n            } else {\n              draft[i].offsetFromFront = draft[i].offsetFromFront - 1;\n            }\n          }\n        });\n      }\n\n    case 'enqueue':\n      {\n        var _payload = _slicedToArray(payload, 1),\n            itemToEnqueue = _payload[0];\n\n        return produce(currentModel, function (draft) {\n          draft.unshift(itemToEnqueue);\n        });\n      }\n\n    default:\n      return currentModel;\n  }\n};\n\nexport default transformQueueModel;","map":null,"metadata":{},"sourceType":"module"}