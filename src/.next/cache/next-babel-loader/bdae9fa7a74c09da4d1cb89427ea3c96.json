{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\n\nconst withReverseStep = Page => {\n  class WrapperComponent extends Component {\n    constructor(props) {\n      super(props);\n\n      _defineProperty(this, \"reverseLogs\", void 0);\n\n      _defineProperty(this, \"stepSnapshots\", void 0);\n\n      _defineProperty(this, \"ref\", void 0);\n\n      _defineProperty(this, \"saveReverseLog\", (reverseActionName, params, step) => {\n        const action = {\n          name: reverseActionName,\n          params,\n          step\n        };\n        this.reverseLogs.push(action);\n        this.forceUpdate();\n      });\n\n      _defineProperty(this, \"saveStepSnapshots\", (snapshot, step) => {\n        this.stepSnapshots.push({\n          snapshot,\n          step\n        });\n      });\n\n      _defineProperty(this, \"reverseToStep\", async targetStep => {\n        const snapshotOfTargetStep = this.stepSnapshots.find(({\n          step\n        }) => step === targetStep);\n\n        if (snapshotOfTargetStep) {\n          //@ts-ignore\n          const handler = this.getRef().handleReverse;\n          handler(snapshotOfTargetStep.snapshot);\n        }\n      });\n\n      this.state = {};\n      this.reverseLogs = [];\n      this.stepSnapshots = [];\n      this.ref = React.createRef();\n    }\n\n    getLastStepToReverse() {\n      const length = this.reverseLogs.length;\n      return length ? this.reverseLogs[length - 1] : null;\n    }\n\n    getRef() {\n      const component = this.ref.current;\n      return component || {};\n    }\n\n    render() {\n      return __jsx(Page, _extends({}, this.props, {\n        ref: this.ref,\n        saveReverseLog: this.saveReverseLog,\n        reverseToStep: this.reverseToStep,\n        saveStepSnapshots: this.saveStepSnapshots\n      }));\n    }\n\n  }\n\n  return WrapperComponent; // return React.forwardRef((props: P, ref) => (\n  //   //@ts-ignore\n  //   <WrapperComponent innerRef={ref} {...props} />\n  // ));\n};\n\nexport default withReverseStep;","map":null,"metadata":{},"sourceType":"module"}