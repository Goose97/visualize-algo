{"ast":null,"code":"import _Reflect$construct from \"@babel/runtime-corejs2/core-js/reflect/construct\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = _Reflect$construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false; if (_Reflect$construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(_Reflect$construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { AutoTransformGroup, Line } from 'components';\nimport { ARRAY_BLOCK_HEIGHT, LINE_HEIGHT } from \"../../constants\";\nexport var SortSeperationLine = /*#__PURE__*/function (_Component) {\n  _inherits(SortSeperationLine, _Component);\n\n  var _super = _createSuper(SortSeperationLine);\n\n  function SortSeperationLine() {\n    var _this;\n\n    _classCallCheck(this, SortSeperationLine);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"getRenderSequence\", function () {\n      var currentApi = _this.props.currentApi;\n\n      switch (currentApi) {\n        case 'bubbleSort':\n          return ['unsorted', 'line', 'sorted'];\n\n        case 'insertionSort':\n          return ['sorted', 'line', 'unsorted'];\n\n        case 'selectionSort':\n          return ['sorted', 'line', 'unsorted'];\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getXCoordinationBySequenceIndex\", function (index, text) {\n      var initialX = _this.props.initialX;\n\n      switch (index) {\n        case 0:\n          {\n            var offset = text.length * 10;\n            return initialX - offset;\n          }\n\n        case 1:\n          return initialX;\n\n        case 2:\n          return initialX + 10;\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(SortSeperationLine, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          currentX = _this$props.currentX,\n          initialX = _this$props.initialX;\n      if (initialX == null) return null;\n      var y1 = ARRAY_BLOCK_HEIGHT + LINE_HEIGHT;\n      var y2 = -LINE_HEIGHT;\n      return __jsx(AutoTransformGroup, {\n        origin: {\n          x: currentX,\n          y: 0\n        }\n      }, this.getRenderSequence().map(function (item, index) {\n        var x = _this2.getXCoordinationBySequenceIndex(index, item);\n\n        if (item === 'sorted') return __jsx(\"text\", {\n          x: x,\n          y: y2,\n          key: item\n        }, \"Sorted\");\n        if (item === 'unsorted') return __jsx(\"text\", {\n          x: x,\n          y: y2,\n          key: item\n        }, \"Unsorted\");\n        if (item === 'line') return __jsx(Line, {\n          x1: x,\n          x2: x,\n          y1: y1,\n          y2: y2,\n          key: item\n        });\n      }));\n    }\n  }]);\n\n  return SortSeperationLine;\n}(Component);\nexport default SortSeperationLine;","map":null,"metadata":{},"sourceType":"module"}