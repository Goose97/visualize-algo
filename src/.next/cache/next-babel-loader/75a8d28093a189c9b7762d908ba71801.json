{"ast":null,"code":"import _Reflect$construct from \"@babel/runtime-corejs2/core-js/reflect/construct\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _omit from \"lodash/omit\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = _Reflect$construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false; if (_Reflect$construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(_Reflect$construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { CheckOutlined } from '@ant-design/icons';\nimport { withExtendClassName } from 'hocs';\nimport { classNameHelper } from 'utils';\nexport var Input = /*#__PURE__*/function (_Component) {\n  _inherits(Input, _Component);\n\n  var _super = _createSuper(Input);\n\n  function Input() {\n    var _this;\n\n    _classCallCheck(this, Input);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleInputValueChange\", function (e) {\n      var onChange = _this.props.onChange;\n      var newValue = e.target.value;\n      onChange && onChange(newValue);\n    });\n\n    return _this;\n  }\n\n  _createClass(Input, [{\n    key: \"produceClassName\",\n    value: function produceClassName() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          status = _this$props.status;\n      var classNameObject = {\n        base: className\n      }; //@ts-ignore\n\n      if (status) classNameObject[status] = status;\n      return classNameHelper(classNameObject);\n    }\n  }, {\n    key: \"renderIconAccordingToStatus\",\n    value: function renderIconAccordingToStatus() {\n      var status = this.props.status;\n\n      switch (status) {\n        case 'success':\n          return __jsx(\"span\", {\n            className: \"visual-algo-input__status-icon success\"\n          }, __jsx(CheckOutlined, null));\n\n        case 'error':\n          return __jsx(\"span\", {\n            className: \"visual-algo-input__status-icon error\"\n          }, \"\\u2716\");\n\n        default:\n          return null;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        className: \"visual-algo-input__wrapper\"\n      }, __jsx(\"input\", _extends({}, _omit(this.props, ['state', 'className']), {\n        onChange: this.handleInputValueChange,\n        className: this.produceClassName()\n      })), this.renderIconAccordingToStatus());\n    }\n  }]);\n\n  return Input;\n}(Component);\nexport default withExtendClassName('visual-algo-input__input')(Input);","map":null,"metadata":{},"sourceType":"module"}