{"ast":null,"code":"import _Reflect$construct from \"@babel/runtime-corejs2/core-js/reflect/construct\";\nimport _Popover from \"antd/lib/popover\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = _Reflect$construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false; if (_Reflect$construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(_Reflect$construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { QuestionOutlined } from '@ant-design/icons';\nimport { AnimationTaskQueue } from 'utils';\nexport var PanZoomController = /*#__PURE__*/function (_Component) {\n  _inherits(PanZoomController, _Component);\n\n  var _super = _createSuper(PanZoomController);\n\n  function PanZoomController(props) {\n    var _this;\n\n    _classCallCheck(this, PanZoomController);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"wrapperRef\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"animationQueue\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"trackingMouseMove\", function (e) {\n      var _ref = e,\n          movementX = _ref.movementX,\n          movementY = _ref.movementY;\n      e.stopPropagation();\n      e.preventDefault();\n\n      _this.animationQueue.enqueue({\n        x: movementX,\n        y: movementY\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleAnimationQueueTask\", function (_ref2) {\n      var x = _ref2.x,\n          y = _ref2.y;\n      var onPanning = _this.props.onPanning;\n      onPanning(x, y);\n    });\n\n    _this.wrapperRef = React.createRef();\n    _this.animationQueue = new AnimationTaskQueue({\n      callback: _this.handleAnimationQueueTask,\n      isAdditiveTask: true,\n      combineTaskCallback: function combineTaskCallback(tasks) {\n        return tasks.reduce(function (_ref3, acc) {\n          var x = _ref3.x,\n              y = _ref3.y;\n          return {\n            x: acc.x + x,\n            y: acc.y + y\n          };\n        }, {\n          x: 0,\n          y: 0\n        });\n      },\n      taskQueueMax: 5\n    });\n    return _this;\n  }\n\n  _createClass(PanZoomController, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.addPanListener();\n    }\n  }, {\n    key: \"addPanListener\",\n    value: function addPanListener() {\n      var _this2 = this;\n\n      try {\n        var _this$wrapperRef$curr;\n\n        var canvasElement = (_this$wrapperRef$curr = this.wrapperRef.current) === null || _this$wrapperRef$curr === void 0 ? void 0 : _this$wrapperRef$curr.parentNode;\n        canvasElement === null || canvasElement === void 0 ? void 0 : canvasElement.addEventListener('mousedown', function () {\n          return canvasElement === null || canvasElement === void 0 ? void 0 : canvasElement.addEventListener('mousemove', _this2.trackingMouseMove);\n        });\n        canvasElement === null || canvasElement === void 0 ? void 0 : canvasElement.addEventListener('mouseup', function () {\n          return canvasElement === null || canvasElement === void 0 ? void 0 : canvasElement.removeEventListener('mousemove', _this2.trackingMouseMove);\n        });\n      } catch (e) {\n        console.log('e', e);\n      }\n    }\n  }, {\n    key: \"renderHelperPopover\",\n    value: function renderHelperPopover() {\n      var content = __jsx(\"div\", null, \"Drag the screen to move data structure\");\n\n      return __jsx(_Popover, {\n        content: content,\n        placement: \"right\"\n      }, __jsx(\"div\", {\n        className: \"mb-4 fx-center f-big-1 shadow-1\"\n      }, __jsx(QuestionOutlined, null)));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          onZoomIn = _this$props.onZoomIn,\n          onZoomOut = _this$props.onZoomOut;\n      return __jsx(\"div\", {\n        className: \"zoom-controller__wrapper\",\n        ref: this.wrapperRef\n      }, this.renderHelperPopover(), __jsx(\"div\", {\n        className: \"mb-4 fx-center f-big-1 shadow-1 clickable\",\n        onClick: onZoomIn\n      }, \"+\"), __jsx(\"div\", {\n        className: \"mb-4 fx-center f-big-1 shadow-1 clickable\",\n        onClick: onZoomOut\n      }, \"-\"));\n    }\n  }]);\n\n  return PanZoomController;\n}(Component);\nexport default PanZoomController;","map":null,"metadata":{},"sourceType":"module"}