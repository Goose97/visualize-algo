{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { LinkedListDS, CanvasContainer, InitArrayInput } from 'components';\nimport withDSPage from 'hocs/withDSPage';\nimport { extractInstructionFromDescription } from 'utils';\nimport { linkedListInstruction } from 'instructions/LinkedList';\nimport { code, explanation } from 'codes/LinkedList';\nexport class LinkedListPage extends Component {\n  render() {\n    const {\n      data,\n      onDataChange,\n      currentStep,\n      stepDescription,\n      autoPlay,\n      executedApiCount,\n      sideBarWidth,\n      onExecuteApi\n    } = this.props;\n    const linkedListInstruction = extractInstructionFromDescription(stepDescription, 'linkedList');\n    return data ? __jsx(CanvasContainer, null, __jsx(LinkedListDS, {\n      x: 100,\n      y: 200,\n      currentStep: currentStep,\n      totalStep: stepDescription.length - 1,\n      instructions: linkedListInstruction,\n      initialData: data,\n      handleExecuteApi: onExecuteApi,\n      interactive: true,\n      dropdownDisabled: autoPlay,\n      executedApiCount: executedApiCount,\n      keepStateWhenSwitchingApi: true\n    })) : __jsx(\"div\", {\n      className: \"h-full fx-center linked-list-page__init-button\",\n      style: {\n        transform: `translateX(-${(sideBarWidth || 0) / 2}px)`\n      }\n    }, __jsx(InitArrayInput, {\n      onSubmit: onDataChange,\n      text: \"Create new linked list\",\n      defaultLength: 5\n    }));\n  }\n\n}\nexport default withDSPage({\n  code,\n  explanation,\n  instructionGenerator: linkedListInstruction\n})(LinkedListPage);","map":null,"metadata":{},"sourceType":"module"}