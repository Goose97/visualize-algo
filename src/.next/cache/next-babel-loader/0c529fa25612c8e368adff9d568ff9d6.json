{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { HTMLRenderer, DropdownWithParamsInput } from 'components';\nimport LinkedListNodeApiDropdown from \"./LinkedListNodeApiDropdown\";\nimport { getCanvasScaleFactor } from 'utils';\nvar options = [{\n  label: 'Search',\n  value: 'search'\n}, {\n  label: 'Insert',\n  value: 'insert'\n}, {\n  label: 'Delete',\n  value: 'delete'\n}];\nvar requiredParams = {\n  search: {\n    value: 'number'\n  },\n  \"delete\": {\n    index: 'number'\n  },\n  insert: {\n    value: 'number',\n    index: 'number'\n  }\n};\nexport var LinkedListHTML = /*#__PURE__*/function () {\n  function LinkedListHTML() {\n    _classCallCheck(this, LinkedListHTML);\n  }\n\n  _createClass(LinkedListHTML, null, [{\n    key: \"renderToView\",\n    value: function renderToView(params) {\n      var wrapperElement = params.wrapperElement,\n          coordinate = params.coordinate,\n          model = params.model,\n          apiHandler = params.apiHandler,\n          disabled = params.disabled;\n\n      if (wrapperElement) {\n        var _wrapperElement$getBo = wrapperElement.getBoundingClientRect(),\n            width = _wrapperElement$getBo.width,\n            height = _wrapperElement$getBo.height;\n\n        var scaledFactor = getCanvasScaleFactor();\n        var dropdownForEachTreeNode = model.map(function (_ref) {\n          var x = _ref.x,\n              y = _ref.y,\n              key = _ref.key;\n          return __jsx(LinkedListNodeApiDropdown, {\n            nodeKey: key,\n            handler: apiHandler,\n            coordinate: {\n              x: x,\n              y: y\n            },\n            key: key,\n            scale: scaledFactor\n          });\n        });\n\n        var elementToRender = __jsx(\"div\", {\n          style: {\n            width: width,\n            height: height\n          },\n          className: \"linked-list-html__wrapper\"\n        }, __jsx(DropdownWithParamsInput, {\n          options: options,\n          requiredApiParams: requiredParams,\n          handler: apiHandler,\n          disabled: disabled\n        }), dropdownForEachTreeNode);\n\n        var scaledCoordinate = {\n          x: coordinate.x * scaledFactor,\n          y: coordinate.y * scaledFactor\n        };\n        HTMLRenderer.inject(elementToRender, scaledCoordinate, \"linked-list-html__wrapper\");\n      }\n    }\n  }]);\n\n  return LinkedListHTML;\n}();\nexport default LinkedListHTML;","map":null,"metadata":{},"sourceType":"module"}