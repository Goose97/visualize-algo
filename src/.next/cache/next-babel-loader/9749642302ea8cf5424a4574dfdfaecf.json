{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { HTMLRenderer, DropdownWithParamsInput } from 'components';\nimport LinkedListNodeApiDropdown from \"./LinkedListNodeApiDropdown\";\nimport { getCanvasScaleFactor } from 'utils';\nconst options = [{\n  label: 'Search',\n  value: 'search'\n}, {\n  label: 'Insert',\n  value: 'insert'\n}, {\n  label: 'Delete',\n  value: 'delete'\n}];\nconst requiredParams = {\n  search: {\n    value: 'number'\n  },\n  delete: {\n    index: 'number'\n  },\n  insert: {\n    value: 'number',\n    index: 'number'\n  }\n};\nexport class LinkedListHTML {\n  static renderToView(params) {\n    const {\n      wrapperElement,\n      coordinate,\n      model,\n      apiHandler,\n      disabled\n    } = params;\n\n    if (wrapperElement) {\n      const {\n        width,\n        height\n      } = wrapperElement.getBoundingClientRect();\n      const scaledFactor = getCanvasScaleFactor();\n      const dropdownForEachTreeNode = model.map(({\n        x,\n        y,\n        key\n      }) => __jsx(LinkedListNodeApiDropdown, {\n        nodeKey: key,\n        handler: apiHandler,\n        coordinate: {\n          x,\n          y\n        },\n        key: key,\n        scale: scaledFactor\n      }));\n\n      const elementToRender = __jsx(\"div\", {\n        style: {\n          width,\n          height\n        },\n        className: \"linked-list-html__wrapper\"\n      }, __jsx(DropdownWithParamsInput, {\n        options: options,\n        requiredApiParams: requiredParams,\n        handler: apiHandler,\n        disabled: disabled\n      }), dropdownForEachTreeNode);\n\n      const scaledCoordinate = {\n        x: coordinate.x * scaledFactor,\n        y: coordinate.y * scaledFactor\n      };\n      HTMLRenderer.inject(elementToRender, scaledCoordinate, `linked-list-html__wrapper`);\n    }\n  }\n\n}\nexport default LinkedListHTML;","map":null,"metadata":{},"sourceType":"module"}