{"ast":null,"code":"import _Reflect$construct from \"@babel/runtime-corejs2/core-js/reflect/construct\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = _Reflect$construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false; if (_Reflect$construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(_Reflect$construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { classNameHelper } from 'utils';\nexport var ExplanationBlock = /*#__PURE__*/function (_Component) {\n  _inherits(ExplanationBlock, _Component);\n\n  var _super = _createSuper(ExplanationBlock);\n\n  function ExplanationBlock() {\n    _classCallCheck(this, ExplanationBlock);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ExplanationBlock, [{\n    key: \"produceClassNameForStep\",\n    value: function produceClassNameForStep(stepIndex) {\n      var currentStep = this.props.currentStep;\n      return classNameHelper({\n        base: 'explanation-block__step',\n        focus: currentStep === stepIndex\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var explanation = this.props.explanation;\n      return __jsx(\"div\", {\n        className: \"explanation-block__wrapper\"\n      }, __jsx(\"ul\", {\n        className: \"explanation-block__list-step\"\n      }, (explanation || []).map(function (item, index) {\n        return __jsx(\"li\", {\n          className: _this.produceClassNameForStep(index + 1),\n          key: index\n        }, index + 1, \". \", item);\n      })));\n    }\n  }]);\n\n  return ExplanationBlock;\n}(Component);\nexport default ExplanationBlock;","map":null,"metadata":{},"sourceType":"module"}