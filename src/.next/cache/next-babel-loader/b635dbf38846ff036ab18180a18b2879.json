{"ast":null,"code":"import _Reflect$construct from \"@babel/runtime-corejs2/core-js/reflect/construct\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = _Reflect$construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false; if (_Reflect$construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(_Reflect$construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { PointerLink } from 'components';\nimport { HASH_TABLE_KEYS_HEIGHT, HASH_TABLE_KEYS_WIDTH, HASH_TABLE_HASH_FUNC_X, HASH_TABLE_ARRAY_X, ARRAY_BLOCK_HEIGHT, HASH_TABLE_FUNC_WIDTH } from \"../../constants\";\nexport var HashIndicationArrow = /*#__PURE__*/function (_Component) {\n  _inherits(HashIndicationArrow, _Component);\n\n  var _super = _createSuper(HashIndicationArrow);\n\n  function HashIndicationArrow() {\n    _classCallCheck(this, HashIndicationArrow);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(HashIndicationArrow, [{\n    key: \"renderArrowIndicateHashForKey\",\n    value: function renderArrowIndicateHashForKey() {\n      var _this = this;\n\n      var _this$props = this.props,\n          hashTableModel = _this$props.hashTableModel,\n          _onAnimationEnd = _this$props.onAnimationEnd;\n      var keyToHighlight = this.getKeysToHighlight();\n      return _toConsumableArray(hashTableModel.keys).sort(function (_ref, _ref2) {\n        var keyA = _ref.key;\n        var keyB = _ref2.key;\n        // We sort so the key which are about to be deleted will be paint later\n        // so the highlight arrow will be easier to see\n        var pointA = keyToHighlight.includes(keyA) ? 1 : 0;\n        var pointB = keyToHighlight.includes(keyB) ? 1 : 0;\n        return pointA - pointB;\n      }).map(function (_ref3) {\n        var key = _ref3.key,\n            isNew = _ref3.isNew,\n            address = _ref3.address;\n        var memoryLocationYCoordinate = (address + 0.5) * ARRAY_BLOCK_HEIGHT;\n\n        var index = _this.getKeysIndex(key); // The path can be divided into three part\n        // 1 - Move to hash funtion\n        // 2 - Move inside hash function\n        // 3 - Reach memory block\n\n\n        var moveToHashFunction = \"M \".concat(HASH_TABLE_KEYS_WIDTH, \" \").concat((index + 0.5) * HASH_TABLE_KEYS_HEIGHT + index * 10, \" H \").concat(HASH_TABLE_HASH_FUNC_X);\n        var moveInsideHashFunction = \"L \".concat(HASH_TABLE_HASH_FUNC_X + HASH_TABLE_FUNC_WIDTH, \" \").concat(memoryLocationYCoordinate);\n        var reachMemoryBlock = \"H \".concat(HASH_TABLE_ARRAY_X - 50);\n        var path = [moveToHashFunction, moveInsideHashFunction, reachMemoryBlock].join(' ');\n        var shouldHighlight = keyToHighlight.includes(key);\n        var shouldBlur = keyToHighlight.length ? !shouldHighlight : false;\n        return __jsx(PointerLink, {\n          path: path,\n          key: key,\n          arrowDirection: \"right\",\n          isNew: !!isNew,\n          animationDuration: \"2s\",\n          onAnimationEnd: function onAnimationEnd(animationName) {\n            return _onAnimationEnd(key, animationName);\n          },\n          highlight: shouldHighlight,\n          blur: shouldBlur\n        });\n      });\n    }\n  }, {\n    key: \"getKeysToHighlight\",\n    value: function getKeysToHighlight() {\n      var hashTableModel = this.props.hashTableModel;\n      return hashTableModel.keys.filter(function (_ref4) {\n        var highlight = _ref4.highlight;\n        return highlight;\n      }).map(function (_ref5) {\n        var key = _ref5.key;\n        return key;\n      });\n    }\n  }, {\n    key: \"getKeysIndex\",\n    value: function getKeysIndex(key) {\n      var hashTableModel = this.props.hashTableModel;\n      return hashTableModel.keys.findIndex(function (_ref6) {\n        var itemKey = _ref6.key;\n        return key === itemKey;\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.renderArrowIndicateHashForKey();\n    }\n  }]);\n\n  return HashIndicationArrow;\n}(Component);\nexport default HashIndicationArrow;","map":null,"metadata":{},"sourceType":"module"}