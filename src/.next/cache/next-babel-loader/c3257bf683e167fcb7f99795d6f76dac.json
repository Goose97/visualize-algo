{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _Reflect$construct from \"@babel/runtime-corejs2/core-js/reflect/construct\";\nimport _Menu from \"antd/lib/menu\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = _Reflect$construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false; if (_Reflect$construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(_Reflect$construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { CustomDropDown, ParameterInputPopover } from 'components';\nimport { LINKED_LIST_BLOCK_WIDTH, LINKED_LIST_BLOCK_HEIGHT } from \"../../../constants\";\nimport { classNameHelper } from 'utils';\nvar options = [{\n  label: 'Search',\n  value: 'search'\n}, {\n  label: 'Insert before',\n  value: 'insert'\n}, {\n  label: 'Delete',\n  value: 'delete'\n}];\nexport var LinkedListNodeApiDropdown = /*#__PURE__*/function (_Component) {\n  _inherits(LinkedListNodeApiDropdown, _Component);\n\n  var _super = _createSuper(LinkedListNodeApiDropdown);\n\n  function LinkedListNodeApiDropdown(props) {\n    var _this;\n\n    _classCallCheck(this, LinkedListNodeApiDropdown);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      isMenuVisible: false\n    };\n    return _this;\n  }\n\n  _createClass(LinkedListNodeApiDropdown, [{\n    key: \"handleSelectApi\",\n    value: function handleSelectApi(api, params) {\n      var handler = this.props.handler; // const method = `on${upcaseFirstLetterAndSplit(api)}`;\n      // //@ts-ignore\n      // const handler = this.props[method];\n      // handler && handler(params);\n\n      handler && handler(api, params);\n      this.setState({\n        isMenuVisible: false\n      });\n    }\n  }, {\n    key: \"produceClassName\",\n    value: function produceClassName() {\n      var isMenuVisible = this.state.isMenuVisible;\n      return classNameHelper(_defineProperty({\n        base: 'linked-list-html__node-dropdown'\n      }, 'menu-visible', !!isMenuVisible));\n    }\n  }, {\n    key: \"renderMenu\",\n    value: function renderMenu() {\n      var _this2 = this;\n\n      var nodeKey = this.props.nodeKey;\n      return __jsx(_Menu, null, options.map(function (_ref) {\n        var label = _ref.label,\n            apiName = _ref.value;\n\n        switch (apiName) {\n          case 'search':\n          case 'delete':\n            return __jsx(_Menu.Item, {\n              onClick: function onClick() {\n                return _this2.handleSelectApi(apiName, {\n                  key: nodeKey\n                });\n              },\n              key: apiName\n            }, label);\n\n          case 'insert':\n            return __jsx(_Menu.Item, {\n              key: apiName\n            }, __jsx(ParameterInputPopover, {\n              getPopupContainer: function getPopupContainer(triggerNode) {\n                return triggerNode.parentNode;\n              },\n              parameters: {\n                value: 'number'\n              },\n              onSubmit: function onSubmit(params) {\n                _this2.handleSelectApi(apiName, _objectSpread({\n                  key: nodeKey\n                }, params));\n\n                _this2.setState({\n                  isMenuVisible: false\n                });\n              }\n            }, __jsx(\"div\", null, label)));\n        }\n      }));\n    }\n  }, {\n    key: \"getWidthHeightAndCoordinate\",\n    value: function getWidthHeightAndCoordinate() {\n      var _this$props = this.props,\n          coordinate = _this$props.coordinate,\n          scale = _this$props.scale;\n\n      try {\n        var linkedListNode = document.querySelector('g > .linked-list-block__wrapper'); //@ts-ignore\n\n        var _linkedListNode$getBo = linkedListNode === null || linkedListNode === void 0 ? void 0 : linkedListNode.getBoundingClientRect(),\n            width = _linkedListNode$getBo.width,\n            height = _linkedListNode$getBo.height;\n\n        return {\n          //@ts-ignore\n          width: width + 40,\n          //@ts-ignore\n          height: height + 30,\n          //@ts-ignore\n          top: coordinate.y * scale,\n          //@ts-ignore\n          left: coordinate.x * scale\n        };\n      } catch (e) {\n        console.log(e);\n        return {\n          width: LINKED_LIST_BLOCK_WIDTH + 30,\n          height: LINKED_LIST_BLOCK_HEIGHT + 20,\n          top: coordinate.y,\n          left: coordinate.x\n        };\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var isMenuVisible = this.state.isMenuVisible;\n\n      var style = _objectSpread({}, this.getWidthHeightAndCoordinate(), {\n        position: 'absolute'\n      });\n\n      return __jsx(\"div\", {\n        style: style,\n        className: this.produceClassName()\n      }, __jsx(CustomDropDown, {\n        overlay: this.renderMenu(),\n        options: options,\n        onVisibleChange: function onVisibleChange(visible) {\n          return _this3.setState({\n            isMenuVisible: visible\n          });\n        },\n        visible: isMenuVisible\n      }));\n    }\n  }]);\n\n  return LinkedListNodeApiDropdown;\n}(Component);\nexport default LinkedListNodeApiDropdown;","map":null,"metadata":{},"sourceType":"module"}