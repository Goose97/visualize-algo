{"ast":null,"code":"const bubbleSort = `function swap(arr, firstIndex, secondIndex){\n    let temp = arr[firstIndex];\n    arr[firstIndex] = arr[secondIndex];\n    arr[secondIndex] = temp;\n  }\n  \n  function bubbleSort(arr){\n  \n    let len = arr.length,\n        i, j, stop;\n  \n    for (i=0; i < len; i++){\n        for (j=0, stop=len-i; j < stop; j++){\n            if (arr[j] > arr[j+1]){\n                swap(arr, j, j+1);\n            }\n        }\n    }\n  \n    return arr;\n  }`;\nconst selectionSort = `function selectionSort(arr){\n    let len = arr.length;\n    for (let i = 0; i < len; i++) {\n        let min = i;\n        for (let j = i + 1; j < len; j++) {\n            if (arr[min] > arr[j]) {\n                min = j;\n            }\n        }\n        if (min !== i) {\n            let tmp = arr[i];\n            arr[i] = arr[min];\n            arr[min] = tmp;\n        }\n    }\n    return arr;\n  }`;\nexport const code = {\n  bubbleSort: bubbleSort,\n  selectionSort: selectionSort,\n  insertionSort: ''\n};\nexport const explanation = {\n  bubbleSort: ['Duyệt mảng N lần (i = 0,1,..., N-1 (N = arr.length)).', 'Lần duyệt thứ i đưa phần tử lớn thứ i về đúng vị trí N - i mảng.', 'So sánh phần tử j hiện tại với phần tử  kế tiếp nó j+1', 'Nếu phần thử hiện tại lớn hơn phẩn tử kế tiếp nó, đổi chỗ hai phần tử này', 'Duyệt phần tử kế tiếp phần tử hiện tại'],\n  selectionSort: ['Duyệt mảng N lần (i = 0,1,..., N-1 (N = arr.length)).', 'Lần duyệt thứ i đưa phần tử nhỏ thứ i về đúng vị trí i mảng. Khởi tạo min của dãy từ phần tử thứ i đến phần tử thứ N-1 là i', 'Duyệt mảng từ phần tử  j bắt đầu từ vị trí thứ i+1 đến vị trí thứ N-1 để tìm min', 'Nếu phần tử  j nhỏ hơn min, đặt min bằng phần tử  j', 'Sau lần duyệt thứ i, nếu min không phải phần tử thứ i, đổi chỗ  min, i'],\n  insertionSort: []\n};","map":null,"metadata":{},"sourceType":"module"}