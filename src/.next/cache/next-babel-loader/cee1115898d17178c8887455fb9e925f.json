{"ast":null,"code":"import _Reflect$construct from \"@babel/runtime-corejs2/core-js/reflect/construct\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _omit from \"lodash/omit\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = _Reflect$construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false; if (_Reflect$construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(_Reflect$construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { PureComponent } from 'react';\nimport { PointerLink } from 'components';\nimport { caculatePointerPathFromTwoNodeCenter } from 'utils';\nimport { GRAPH_NODE_RADIUS } from \"../../constants\";\nexport var GraphLikeEdges = /*#__PURE__*/function (_PureComponent) {\n  _inherits(GraphLikeEdges, _PureComponent);\n\n  var _super = _createSuper(GraphLikeEdges);\n\n  function GraphLikeEdges() {\n    _classCallCheck(this, GraphLikeEdges);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(GraphLikeEdges, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          from = _this$props.from,\n          to = _this$props.to,\n          arrowDirection = _this$props.arrowDirection;\n      var fromCenter = {\n        x: from.x + GRAPH_NODE_RADIUS,\n        y: from.y + GRAPH_NODE_RADIUS\n      };\n      var toCenter = {\n        x: to.x + GRAPH_NODE_RADIUS,\n        y: to.y + GRAPH_NODE_RADIUS\n      };\n      var pathAndRotation = caculatePointerPathFromTwoNodeCenter(fromCenter, toCenter, GRAPH_NODE_RADIUS, !arrowDirection);\n      return __jsx(PointerLink, _extends({}, _omit(this.props, ['from', 'to']), pathAndRotation));\n    }\n  }]);\n\n  return GraphLikeEdges;\n}(PureComponent);\nexport default GraphLikeEdges;","map":null,"metadata":{},"sourceType":"module"}